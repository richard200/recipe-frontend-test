{"ast":null,"code":"var _jsxFileName = \"/home/user/Development/code/phase3/meme-generator-frontend/meme-generator-frontend/src/components/Display.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport MemeCollection from \"./MemeCollection\";\nimport NewMeme from \"./NewMeme\";\nimport Search from \"./Search\";\n// import BotArmy from \"./YourBotArmy\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Display() {\n  _s();\n  let [memes, setMemes] = useState([]);\n  let [query, setQuery] = useState(\"\");\n\n  // let [name, setName] = useState(\"\")\n  // let [text_top, setTextTop] = useState(\"\");\n  // let [text_bottom, setTextBottom] = useState(\"\");\n\n  //   function displayMemes(e) {\n  //     e.preventDefault();\n  //     fetch(\"http://localhost:9292/memes\", {\n  //       method: \"GET\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify({\n  //         name: name,\n  //         text_top: text_top,\n  //         text_bottom: text_bottom,\n\n  //       }),\n  //     }).then((r) => r.json())\n  //     .then((data) => {\n  //       setName(name)\n  //       setTextTop(text_top)\n  //       setTextBottom(text_bottom)\n\n  //     });\n\n  //   }\n\n  useEffect(() => {\n    fetch(\"https://meme-generator-backend.onrender.com/memes?q=\" + query).then(resp => resp.json()).then(memes => {\n      setMemes(memes);\n    });\n  }, [query]);\n  function handleSearch(e) {\n    setQuery(e.target.value);\n  }\n\n  //   let addBot= (bot)=>{\n  //     setBot(bots.map((b)=>(b.id === bot.id ? {...b, army:true} : b)))\n  // }\n  // let removeBot =(bot)=>{\n  //     setBot(bots.map((b)=>(b.id === bot.id ? {...b, army:false} : b)))\n  // }\n\n  // let deleteBot = (bot)=>{\n  //     let botRemoved =  bots.filter((b)=> b.id !==bot.id);\n  //     setBot((bot)=>botRemoved)\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      handleSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(NewMeme, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(MemeCollection, {\n      memes: memes\n      // addBot={addBot}\n      // deleteBot={deleteBot}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Display, \"KHAG7Wpdh1+hW8rCZ3AVm2F7B8U=\");\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["React","useEffect","useState","MemeCollection","NewMeme","Search","jsxDEV","_jsxDEV","Display","_s","memes","setMemes","query","setQuery","fetch","then","resp","json","handleSearch","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/user/Development/code/phase3/meme-generator-frontend/meme-generator-frontend/src/components/Display.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport MemeCollection from \"./MemeCollection\";\nimport NewMeme from \"./NewMeme\";\nimport Search from \"./Search\";\n// import BotArmy from \"./YourBotArmy\";\n\nfunction Display() {\n\n  let [memes, setMemes] = useState([])\n  let [query, setQuery] = useState(\"\")\n\n// let [name, setName] = useState(\"\")\n// let [text_top, setTextTop] = useState(\"\");\n// let [text_bottom, setTextBottom] = useState(\"\");\n\n//   function displayMemes(e) {\n//     e.preventDefault();\n//     fetch(\"http://localhost:9292/memes\", {\n//       method: \"GET\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({\n//         name: name,\n//         text_top: text_top,\n//         text_bottom: text_bottom,\n      \n//       }),\n//     }).then((r) => r.json())\n//     .then((data) => {\n//       setName(name)\n//       setTextTop(text_top)\n//       setTextBottom(text_bottom)\n   \n//     });\n\n\n//   }\n\n  useEffect(() => {\n\n    fetch(\"https://meme-generator-backend.onrender.com/memes?q=\" + query, )\n      .then((resp) => resp.json())\n      .then((memes) => {\n        setMemes(memes)\n      })\n\n  }, [query])\n\n  function handleSearch(e) {\n    setQuery(e.target.value)\n  }\n\n  \n\n//   let addBot= (bot)=>{\n//     setBot(bots.map((b)=>(b.id === bot.id ? {...b, army:true} : b)))\n// }\n// let removeBot =(bot)=>{\n//     setBot(bots.map((b)=>(b.id === bot.id ? {...b, army:false} : b)))\n// }\n\n// let deleteBot = (bot)=>{\n//     let botRemoved =  bots.filter((b)=> b.id !==bot.id);\n//     setBot((bot)=>botRemoved)\n// }\n  return (\n    <div>\n<Search handleSearch={handleSearch}/>\n<NewMeme/>\n <MemeCollection \n            memes= {memes}\n            // addBot={addBot}\n            // deleteBot={deleteBot}\n />\n\n\n\n\n </div>\n  )\n}\n\nexport default Display;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,MAAM,MAAM,UAAU;AAC7B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAEjB,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,IAAI,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAGA;;EAEED,SAAS,CAAC,MAAM;IAEda,KAAK,CAAC,sDAAsD,GAAGF,KAAK,CAAG,CACpEG,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,EAAE,CAAC,CAC3BF,IAAI,CAAEL,KAAK,IAAK;MACfC,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,CAAC;EAEN,CAAC,EAAE,CAACE,KAAK,CAAC,CAAC;EAEX,SAASM,YAAYA,CAACC,CAAC,EAAE;IACvBN,QAAQ,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1B;;EAIF;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACE,oBACEd,OAAA;IAAAe,QAAA,gBACJf,OAAA,CAACF,MAAM;MAACa,YAAY,EAAEA;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACrCnB,OAAA,CAACH,OAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACTnB,OAAA,CAACJ,cAAc;MACJO,KAAK,EAAGA;MACR;MACA;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAKI;AAEP;AAACjB,EAAA,CA3EQD,OAAO;AAAAmB,EAAA,GAAPnB,OAAO;AA6EhB,eAAeA,OAAO;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
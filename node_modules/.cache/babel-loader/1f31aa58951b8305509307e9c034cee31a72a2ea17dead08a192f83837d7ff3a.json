{"ast":null,"code":"var _jsxFileName = \"/home/user/Development/code/phase3/meme-generator-frontend/meme-generator-frontend/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Display from \"./Display\";\n\n// function Login() {\n//   let [email, SetEmail] = useState('');\n//   let [password, SetPassword] = useState('');\n//   const history = useHistory();\n\n//   const handleLogin = async () => {\n//     try {\n//       // Send login request to server and receive response\n//       const response = await fetch(\"http://localhost:9292/auth/login\", {\n//         method: 'POST',\n//         body: JSON.stringify({ email, password }),\n//         headers: {\n//           'Content-Type': 'application/json'\n//         }\n//       });\n//       const data = await response.json();\n\n//       // Store session token in local storage or cookie\n//       localStorage.setItem('token', data.token);\n\n//       // Redirect user to another page\n//       history.push(\"/memes\");\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = _ref => {\n  _s();\n  let {\n    onLogin\n  } = _ref;\n  // let navigate = useNavigate()\n\n  let [loggedIn, setLoggedIn] = useState(false);\n  let [email, SetEmail] = useState(\"\");\n  let [password, SetPassword] = useState(\"\");\n  const handleLogin = e => {\n    e.preventDefault();\n    fetch(\"https://meme-generator-backend.onrender.com/auth/login\", {\n      method: \"POST\",\n      crossorigin: true,\n      mode: \"no-cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(response => response.json()).then(data => {\n      // Handle successful login\n\n      console.log(data);\n    }).catch(error => {\n      // Handle login error\n      console.error(error);\n    });\n    setLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loggedIn && /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/memes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"form-login\",\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"input-icon uil uil-at\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          className: \"form-style\",\n          placeholder: \"Your Email\",\n          autoComplete: \"off\",\n          onChange: e => SetEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"input-icon uil uil-lock-alt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          className: \"form-style\",\n          placeholder: \"Your Password\",\n          id: \"password\",\n          autoComplete: \"off\",\n          onChange: e => SetPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-secondary mt-4\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-0 mt-4 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#0\",\n          className: \"\",\n          style: {\n            \"textDecoration\": \"none\",\n            \"color\": \"#adb5bd\"\n          },\n          children: \"Forgot Your Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 1\n  }, this);\n};\n_s(Login, \"T/dkk2A7z1sB7feMcB9JhQ9aIGw=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Redirect","Display","jsxDEV","_jsxDEV","Login","_ref","_s","onLogin","loggedIn","setLoggedIn","email","SetEmail","password","SetPassword","handleLogin","e","preventDefault","fetch","method","crossorigin","mode","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","children","to","fileName","_jsxFileName","lineNumber","columnNumber","id","onSubmit","className","type","name","placeholder","autoComplete","onChange","target","value","required","href","style","_c","$RefreshReg$"],"sources":["/home/user/Development/code/phase3/meme-generator-frontend/meme-generator-frontend/src/components/Login.js"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Display from \"./Display\";\n\n\n// function Login() {\n//   let [email, SetEmail] = useState('');\n//   let [password, SetPassword] = useState('');\n//   const history = useHistory();\n\n//   const handleLogin = async () => {\n//     try {\n//       // Send login request to server and receive response\n//       const response = await fetch(\"http://localhost:9292/auth/login\", {\n//         method: 'POST',\n//         body: JSON.stringify({ email, password }),\n//         headers: {\n//           'Content-Type': 'application/json'\n//         }\n//       });\n//       const data = await response.json();\n      \n//       // Store session token in local storage or cookie\n//       localStorage.setItem('token', data.token);\n\n//       // Redirect user to another page\n//       history.push(\"/memes\");\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\nconst Login = ({onLogin}) => {\n\n  // let navigate = useNavigate()\n\n  let [loggedIn, setLoggedIn] = useState(false);\n\n  let [email, SetEmail] = useState(\"\");\n  let [password, SetPassword] = useState(\"\");\n\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    fetch(\"https://meme-generator-backend.onrender.com/auth/login\", {\n      method: \"POST\",\n      crossorigin: true,\n      mode: \"no-cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n       email, password,\n      })\n    }).then((response) => response.json())\n    .then((data) => {\n      // Handle successful login\n      \n      console.log(data);\n    })\n    .catch((error) => {\n      // Handle login error\n      console.error(error);\n    });\n    setLoggedIn(true);\n};\n\n  \n\n  return (\n<div>\n  \n  {loggedIn && <Redirect to='/memes' />}\n    <form id=\"form-login\" onSubmit={handleLogin}>\n      <div className=\"form-group\">\n        <i className=\"input-icon uil uil-at\"></i>\n        <input\n          type=\"email\"\n          name=\"email\"\n          id=\"email\"\n          className=\"form-style\"\n          placeholder=\"Your Email\"\n          autoComplete=\"off\"\n          onChange={e => SetEmail( e.target.value )} required\n        />\n      </div>\n      <div className=\"form-group mt-2\">\n        <i className=\"input-icon uil uil-lock-alt\"></i>\n        <input\n          type=\"password\"\n          name=\"password\"\n          className=\"form-style\"\n          placeholder=\"Your Password\"\n          id=\"password\"\n          autoComplete=\"off\"\n          onChange={e =>\n            SetPassword( e.target.value )} required\n          \n        />\n      </div>\n      <button type=\"submit\" className=\"btn btn-secondary mt-4\">\n     \n        Submit\n      </button>\n      <p className=\"mb-0 mt-4 text-center\">\n        <a href=\"#0\" className=\"\" style={{\"textDecoration\": \"none\", \"color\": \"#adb5bd\"}}>\n          Forgot Your Password?\n        </a>\n      </p>\n    </form>\n   \n    </div>\n  );\n};\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
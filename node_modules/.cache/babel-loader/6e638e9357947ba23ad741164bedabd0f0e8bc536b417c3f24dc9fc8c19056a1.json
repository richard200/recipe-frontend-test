{"ast":null,"code":"var _jsxFileName = \"/home/user/Development/code/phase3/meme-generator-frontend/meme-generator-frontend/src/components/NewMeme.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewMeme() {\n  _s();\n  //   const [body, setBody] = useState(\"\");\n\n  let [name, setName] = useState(\"\");\n  let [text_top, setTextTop] = useState(\"\");\n  let [text_bottom, setTextBottom] = useState(\"\");\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(\"http://localhost:9292/memes/create\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: name,\n        text_top: text_top,\n        text_bottom: text_bottom\n      })\n    }).then(r => r.json()).then(data => {\n      setName(name);\n      setTextTop(text_top);\n      setTextBottom(text_bottom);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"new-message\",\n      onSubmit: handleSubmit,\n      children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        onChange: e => setName(e.target.value),\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), \"First Part: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: text_top,\n        onChange: e => setTextTop(e.target.value),\n        type: \"text\",\n        name: \"text_top\",\n        placeholder: \"First part of meme\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), \"Second Part: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: text_bottom,\n        onChange: e => setTextBottom(e.target.value),\n        type: \"text\",\n        name: \"text_bottom\",\n        placeholder: \"Second part of meme\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        type: \"submit\",\n        children: \"Create New Meme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(NewMeme, \"rOc/LIaxtp5ZeHsGHX+ZBCquD8k=\");\n_c = NewMeme;\nexport default NewMeme;\nvar _c;\n$RefreshReg$(_c, \"NewMeme\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NewMeme","_s","name","setName","text_top","setTextTop","text_bottom","setTextBottom","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","json","data","className","children","onSubmit","value","onChange","target","type","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/user/Development/code/phase3/meme-generator-frontend/meme-generator-frontend/src/components/NewMeme.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction NewMeme() {\n//   const [body, setBody] = useState(\"\");\n\nlet [name, setName] = useState(\"\")\n  let [text_top, setTextTop] = useState(\"\");\n  let [text_bottom, setTextBottom] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    fetch(\"http://localhost:9292/memes/create\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: name,\n        text_top: text_top,\n        text_bottom: text_bottom,\n      }),\n    })\n      .then((r) => r.json())\n      .then((data) => {\n       setName(name)\n       setTextTop(text_top)\n       setTextBottom(text_bottom)\n      });\n  }\n\n  return (\n\n    <div className=\"form\">\n\n   \n    <form className=\"new-message\" onSubmit={handleSubmit}>\n\nName: <input value={name} \n        onChange={(e) => setName(e.target.value)} \n        type=\"text\"\n         name=\"name\"\n          placeholder=\"Name\" required />\n\nFirst Part: <input value={text_top} \n        onChange={(e) => setTextTop(e.target.value)} \n        type=\"text\"\n         name=\"text_top\"\n          placeholder=\"First part of meme\" required />\n\nSecond Part: <input value={text_bottom} \n        onChange={(e) => setTextBottom(e.target.value)} \n        type=\"text\"\n         name=\"text_bottom\"\n          placeholder=\"Second part of meme\" required />\n      {/* <input\n        type=\"text\"\n        name=\"body\"\n        autoComplete=\"off\"\n        value={body}\n        onChange={(e) => setBody(e.target.value)}\n      /> */}\n      <button onClick={handleSubmit}type=\"submit\">Create New Meme</button>\n    </form>\n    </div>\n  );\n}\n\nexport default NewMeme;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}